-- This file was generated using Luraph Obfuscator v13.5.4

return(function(Yb,ub,Zb,vb,nb,Ub,Bb,kb,pb,xb,Ib,Ob,Lb,db,mb,tb,Db,eb,ab,Jb,yb,sb,Vb,Cb,Nb,Kb,Eb,Fb,Gb,lb,zb,Rb,cb,Pb,bb,Tb,Ab,ob,wb,...)local d,hb,G,i,J,C,E=eb.gsub,0,nil,nil,nil,nil,(nil);local r,X=Kb,pcall;local f,g=tostring,db;local M=(string.char);while hb~=0X00005 do if hb<=0x0001 then if hb~=0 then J=Ob;do hb=4;end;else G=Cb;hb=0X00002;end;elseif hb<=0X02 then i=Db;hb=0X001;else if hb==0x3 then E={6,1,0X07};do hb=5;end;else do C=Vb;end;hb=0X3;end;end;end;local q,V=assert,rawset;local K=(string.rep);do hb=0x0000;end;local v,Hb=nil,nil;repeat do if hb~=0X0 then Hb={};break;else v=Zb.wrap;hb=1;end;end;until(false);local w,e=nil,(nil);local W=(vb);local z=(unpack or pb);for ds=0X0,0X2 do do if ds<=0x00000 then else if ds==1 then do w=0x0000100000000;end;else e=eb.match;end;end;end;end;local Y=((G and G()or _ENV));local R=(w-0X1);do hb=4;end;local a,u,o,j=nil,nil,nil,(nil);while hb~=5 do if hb<=0x1 then if hb==0X0 then o=1;hb=1;else do j=zb;end;do hb=2;end;end;else if not(hb<=2)then do if hb==0X3 then hb=0;else a="LPH#";hb=3;end;end;else a=d(g(a,0X5),Jb,function(vd)if i(vd,0X2)~=Gb then local v5=(M(W(vd,0X10)));do if u then local Vc,gc=0x0,(nil);while(true)do if Vc<=0x0 then gc=K(v5,u);Vc=0X2;else if Vc==1 then return gc;else do u=nb;end;Vc=1;end;end;end;else return v5;end;end;else local yL=(0);while(true)do do if yL~=0 then return"";else u=W(g(vd,1,1));yL=0X01;end;end;end;end;end);hb=5;end;end;end;local x=(function()local bu=2;local nu=nil;repeat if not(bu<=0)then do if bu==1 then do o=o+1;end;bu=0X00000;else nu=i(a,o,o);bu=1;end;end;else do return nu;end;end;until(false);end);local P=({[0X00000]={[0]=0x0,Yb,0X02,3,4,5,6,ob,8,0X9,10,11,0XC,13,0X00e,0XF},{[0]=0X1,0,0X3,0X2,0x5,4,7,ab,ub,0X8,11,10,13,12,0XF,0XE},{[0X0000]=0X2,3,0X0,0x1,0x00006,0X7,0X4,5,10,0XB,8,0X9,0X0000E,0XF,12,0Xd},{[0]=0X3,0x2,0X1,0x0000,7,6,xb,0X4,11,10,9,0X8,15,14,0xD,0xC},{[tb]=0X4,5,6,7,0,0X1,2,0X3,12,0XD,kb,15,0x8,9,0XA,0X0B},{[0x0000]=5,4,ob,0x6,1,0,0X3,0X0002,13,0Xc,0XF,14,9,8,11,0X000A},{[0X00]=ab,0X7,4,5,2,0X0003,0,1,14,0Xf,12,0X00D,wb,11,8,9},{[0]=7,0X6,5,4,3,2,0x01,0x000,15,0X0e,0Xd,0X0C,11,0X0a,9,8},{[tb]=8,0X0009,0X00A,mb,12,0X00d,0X000E,0Xf,0,1,0x002,3,Rb,5,0X6,0X07},{[0X00000]=0X00009,0X8,0Xb,0XA,0X000d,12,15,kb,1,0X0,3,2,0X5,4,0x7,6},{[0X00]=wb,0X0000b,0X8,9,kb,cb,12,13,0X2,0X3,0,1,0X6,0x7,4,xb},{[0X00000]=11,0Xa,9,Tb,0XF,14,13,0X0000c,0X03,0X2,0X1,0,0x7,0x6,xb,0X0004},{[0x00]=0x0C,13,14,15,0X8,0X9,0XA,11,Rb,xb,6,0X7,0,Yb,2,0X3},{[0X0]=0X00D,0X0000C,0X000f,14,9,0X0008,0Xb,0XA,0x5,0X4,7,0x6,0X1,0X000,0X3,0X00002},{[0X0]=14,cb,12,0X0000d,10,11,8,ub,6,7,0X4,5,2,0X3,0,1},{[0X0]=0Xf,0X000E,13,12,0X000b,10,0X09,0x00008,0X7,6,5,0X00004,0X003,2,1,0X0}});hb=0X4;local k,m,c,T,t=nil,nil,nil,nil,nil;repeat if hb<=1 then if hb~=0X00000 then do m=0X2^0x34;end;hb=0X3;else t=function()local mn,nn,tn,pn=i(a,o,o+0X3);o=o+4;do return pn*16777216+tn*65536+nn*256+mn;end;end;hb=5;end;elseif hb<=0X2 then do T={[0X0000]=1};end;hb=0X0;else do if hb~=3 then k=2147483648;hb=0x1;else c=k-1;do hb=0X0002;end;end;end;end;until hb==5;do local tV=2;do for Xm=0X1,31 do(T)[Xm]=tV;tV=tV*2;end;end;end;do hb=0X2;end;local s,L,y=nil,nil,(nil);repeat do if not(hb<=0x0000)then if hb==0X001 then L=function()local rv,Xv=nil,(nil);local Gv=0X0;do while true do if not(Gv<=0)then if Gv~=0X0001 then do if not(Xv>=k)then else Xv=Xv-w;end;end;do Gv=0X1;end;else do return Xv*w+rv;end;end;else do rv,Xv=t(),t();end;Gv=2;end;end;end;end;hb=0;else do s=function(ly,wy,uy)local Gy,oy=(ly/T[wy])%T[uy],(0x1);do while 0.678875785336428 do if oy==0 then do return Gy;end;else Gy=Gy-Gy%Yb;oy=0;end;end;end;end;end;hb=1;end;else do y=function()local TX,MX,rX,qX,EX,FX,YX=1,nil,nil,nil,nil,nil,nil;repeat if TX<=0x2 then if not(TX<=0)then if TX==0x0001 then MX=t();TX=0;else do qX=(-1)^s(rX,0X00001F,1);end;TX=0X4;end;else do rX=t();end;TX=0x6;end;elseif TX<=0x4 then if TX~=3 then do EX=0x1;end;TX=5;else YX=s(rX,0X000,20)*w+MX;TX=7;end;else if TX==0x5 then FX=s(rX,sb,0Xb);TX=0X3;else do if not(MX==0x0 and rX==tb)then else return 0;end;end;TX=0X002;end;end;until TX>0x6;TX=0;while 0.5966293363266185 do if TX~=0 then do return qX*(2^(FX-0X3FF))*(YX/m+EX);end;else if FX==0 then if YX==0 then do return qX*0;end;else local Pz=(1);do while 0.4360595598534388 do do if Pz~=0X0 then FX=0x1;Pz=0;else EX=0;break;end;end;end;end;end;else if FX==2047 then do if YX~=0 then return qX*(0X001/0);else return qX*(tb/0);end;end;end;end;TX=0X1;end;end;end;end;hb=3;end;end;until hb>0X02;local F=((bit or bit32));local N=(F and F.bxor or function(P6,n6)P6=P6%w;local f6=nil;local i6=0X1;while i6<=0X1 do if i6==0X0 then do n6=n6%w;end;do i6=0x2;end;else f6=1;i6=0;end;end;local h6=(0);while P6>0X00 and n6>0 do local lu,Du,ru=2,nil,nil;while lu~=5 do if not(lu<=1)then if not(lu<=0x2)then if lu~=3 then do ru=n6%Lb;end;lu=0X1;else n6=(n6-ru)/0X10;do lu=0X0005;end;end;else Du=P6%0x10;lu=4;end;else do if lu~=0 then h6=h6+P[Du][ru]*f6;do lu=0x0;end;else do P6=(P6-Du)/Lb;end;lu=3;end;end;end;end;f6=f6*16;end;return h6+P6*f6+n6*f6;end);local I=(F and F[yb]or function(rj,Mj)for wq=0,0X02 do if not(wq<=0)then if wq==1 then Mj=Mj%w;else return((rj+Mj)-N(rj,Mj))/2;end;else rj=rj%w;end;end;end);local l=F and F[Pb]or function(hR,LR)hR=hR%w;local yR=0;while"\118\104T\125T\063\052\044"do if yR==0X00000 then LR=LR%w;yR=1;else return R-I(R-hR,R-LR);end;end;end;local Xb,B=nil,nil;local A=F and F.bnot or function(V0)return R-(V0%w);end;for vL=0,1 do if vL==0 then Xb=function(...)return r("#",...),{...};end;else B=F and F[Fb];end;end;local b,jb,H=F and F.rshift,{},(error);hb=0X2;local h,O,U,S=nil,nil,nil,nil;while hb<=0x0005 do if not(hb<=2)then if not(hb<=0X3)then if hb==0X004 then O=Ib;hb=0X0;else S=function()local P9=(h());do if P9>c then return P9-w;end;end;return P9;end;hb=6;end;else b=b or function(um,Dm)local Am=(nil);for pB=0X0,0X3 do if not(pB<=0X01)then if pB==2 then Am=(um%w/T[Dm]);else do return Am-Am%0X1;end;end;else if pB==0 then if Dm>=Nb then return 0;end;else if Dm<0 then do return B(um,-Dm);end;end;end;end;end;end;hb=1;end;else if hb<=0X0 then do U={[5]=7,[1]=0X05,[6]=2,[7]=0X3,[0]=6,[0X0002]=7,[5]=9,[2]=3,[0X000]=Yb};end;hb=0x5;else if hb==0X00001 then h=function()local t0=0;local j0=(0x0);while true do local RY=i(a,o,o);o=o+0X00001;j0=l(j0,B(I(RY,0x07F),t0));if I(RY,0x0080)==0x00000 then return j0;end;t0=t0+7;end;end;hb=4;else B=B or function(YB,wB)if not(wB>=32)then else return 0X00000;end;do if wB<0 then do return b(YB,-wB);end;end;end;do return(YB*T[wB])%w;end;end;hb=3;end;end;end;end;local Z=(next);do hb=1;end;local Q,qb,rb=nil,nil,nil;while hb~=3 do do if hb<=0x0000 then do rb=function(XT)local JT,jT,aT=nil,nil,nil;for hI=0,2 do if hI<=0X0 then do JT={i(a,o,o+3)};end;else do if hI==0X001 then do jT=N(JT[0x00001],qb);end;else aT=N(JT[0X2],qb);end;end;end;end;local iT=N(JT[lb],qb);local VT=N(JT[4],qb);local bT=0;while true do if bT<=0X0 then qb=(81*qb+XT)%256;bT=2;else if bT==1 then do return VT*0X1000000+iT*Ab+aT*256+jT;end;else o=o+0X04;bT=0X1;end;end;end;end;end;do hb=0X0003;end;else if hb==1 then Q=x();hb=2;else qb=x();do hb=0;end;end;end;end;end;local p=Bb;hb=0x1;local Wb,D,fb,gb=nil,nil,nil,nil;repeat do if not(hb<=1)then if not(hb<=2)then do if hb~=0X0003 then hb=0X0;else do D=Eb;end;hb=0X00002;end;end;else do fb=0X0001;end;do hb=4;end;end;else do if hb~=0X0 then Wb=function(Sb)local Qb=(t());local C9=(nil);local S9=(0X02);do while"\090\0488e\116/\075\100"do if S9<=1 then if S9~=0X0 then return C9;else for Dv=0x01,Qb,7997 do local yv,Jv,hv=0,nil,(nil);while yv<0X5 do if yv<=0X1 then if yv~=0X00000 then C9=C9..M(z(hv));yv=5;else Jv=Dv+bb-0x1;yv=3;end;else if not(yv<=0X02)then if yv==0X03 then if Jv>Qb then Jv=Qb;end;yv=0x4;else do hv={i(a,o+Dv-1,o+Jv-0X1)};end;yv=2;end;else for Ym=1,#hv do local gm=0;while(true)do if gm~=0 then Q=(Sb*Q+0X097)%256;break;else(hv)[Ym]=N(hv[Ym],Q);gm=1;end;end;end;yv=0x0001;end;end;end;end;S9=3;end;else if S9==0X2 then C9="";S9=0x0;else do o=o+Qb;end;do S9=1;end;end;end;end;end;end;hb=3;else function gb(K5,N5,v5)local a5=K5[8];local h5=(K5[6]);local d5=(K5[2]);local Z5=(K5[0X09]);local i5,e5=K5[3],(K5[7]);local s5,F5=K5[0X0005],(K5[4]);local w5=(D({},{__mode='v'}));local Q5=(nil);Q5=function(...)local Qb=(1);local xS=(G and G()or _ENV);local rS,DS=Xb(...);local PS={};rS=rS-1;do for WX=0,rS do if i5>WX then(PS)[WX]=DS[WX+1];else break;end;end;end;Hb[0x01]=K5;local kS,Sb=(xS==Y and v5 or xS),(0x0);do Hb[2]=PS;end;if not s5 then DS=nil;else if F5 then(PS)[i5]={n=rS>=i5 and rS-i5+1 or 0,z(DS,i5+1,rS+0x0001)};end;end;if kS~=xS then if not(J)then _ENV=kS;else J(Q5,kS);end;end;while"\089\120JIS\106\122\053"do local fF=(a5[Qb]);local PF=fF[0X4];do Qb=Qb+1;end;if not(PF<48)then if not(PF>=0X48)then do if PF>=0X3c then if PF>=0X00042 then if not(PF<0x000045)then if PF<0X46 then do(PS)[fF[7]]=l(PS[fF[6]],PS[fF[0x1]]);end;else if PF==71 then local Bp=fF[0X00007];do Sb=Bp+1;end;for Y5 in Z,PS do if not(Y5>Sb)then else PS[Y5]=nil;end;end;do(PS)[Bp]=PS[Bp](PS[Bp+0X1]);end;do Sb=Bp;end;do for Yy in Z,PS do if Yy>Sb then PS[Yy]=nil;end;end;end;else do if not(not PS[fF[7]])then else Qb=fF[6];end;end;end;end;else if PF>=67 then if PF==68 then(PS)[fF[7]]=PS[fF[0X6]]<PS[fF[0X1]];else do if PS[fF[6]]~=PS[fF[1]]then Qb=fF[0X7];end;end;end;else PS[fF[0X00007]]=N(PS[fF[0X6]],PS[fF[0X001]]);end;end;else if PF<63 then if not(PF>=61)then local jR=d5[fF[0x6]];local IR=jR[0X1];local nR=#IR;local qR=(nil);if not(nR>0X0)then else qR={};for yX=1,nR do local kX=(IR[yX]);if kX[0x001]==0x0 then qR[yX-0X001]={PS,kX[0x2]};else(qR)[yX-0X1]=N5[kX[0X2]];end;end;C(w5,qR);end;PS[fF[0x7]]=gb(jR,qR,kS);else if PF~=0X3E then if fF[0X00001]~=0X9b then repeat local KT,mT,ZT=w5,PS,fF[7];if not(#KT>0X0)then else local EH=({});for jc,uc in Z,KT do for y8,X8 in Z,uc do if not(X8[0X0001]==mT and X8[2]>=ZT)then else local Y_=(X8[2]);if not EH[Y_]then(EH)[Y_]={mT[Y_]};end;(X8)[1]=EH[Y_];do(X8)[0X2]=1;end;end;end;end;end;until true;else Qb=Qb-0X001;(a5)[Qb]={[0X004]=79,[6]=(fF[0x6]-120),[7]=(fF[7]-0X78)};end;else local Pl=fF[0X7];for Wi in Z,PS do if Wi>Sb then do(PS)[Wi]=nil;end;end;end;PS[Pl]=PS[Pl](z(PS,Pl+0x1,Sb));do Sb=Pl;end;for xh in Z,PS do do if not(xh>Sb)then else PS[xh]=nil;end;end;end;end;end;else if not(PF<0X40)then if PF==0X41 then do(PS)[fF[7]]=true;end;else PS[fF[7]]=PS[fF[6]]==fF[5];end;else PS[fF[7]]=PS[fF[6]]-PS[fF[0x1]];end;end;end;else do if not(PF<54)then do if PF<57 then do if PF<55 then local UF=(fF[7]);Sb=UF+2;for S1 in Z,PS do if not(S1>Sb)then else(PS)[S1]=nil;end;end;(PS)[UF]=PS[UF](PS[UF+0X1],PS[UF+2]);Sb=UF;for P6 in Z,PS do if not(P6>Sb)then else PS[P6]=nil;end;end;else do if PF==56 then if fF[0X1]==0Xd1 then Qb=Qb-1;do(a5)[Qb]={[0X4]=5,[0x6]=(fF[6]-178),[0X7]=(fF[0x7]-178)};end;elseif fF[0X001]==224 then Qb=Qb-0X01;(a5)[Qb]={[0X00007]=(fF[7]-150),[6]=(fF[6]-150),[4]=83};else(PS)[fF[0x7]]=-PS[fF[0x6]];end;else local X3,S3=fF[0X007],(fF[1]-0X1)*0X32;local Q3=(PS[X3]);for pr=1,Sb-X3 do(Q3)[S3+pr]=PS[X3+pr];end;end;end;end;end;else if PF<58 then(PS)[fF[7]]={};else do if PF~=59 then PS[fF[0X7]]=A(PS[fF[6]]);else local QN=(fF[0x7]);local ZN=PS[QN];local fN=(fF[0X0001]-1)*50;for G2=0x0001,fF[6]do ZN[fN+G2]=PS[QN+G2];end;end;end;end;end;end;else do if PF>=0X33 then do if not(PF>=52)then PS[fF[7]]=I(PS[fF[6]],PS[fF[0x1]]);else if PF~=0X000035 then(PS[fF[0X7]])[PS[fF[0X00006]]]=fF[0X00005];else if fF[0X1]==7 then Qb=Qb-0X1;(a5)[Qb]={[0X6]=(fF[6]-232),[7]=(fF[0X07]-0xE8),[4]=0X00005D};else repeat local Li,Si=w5,(PS);do if not(#Li>0X0)then else local t2={};do for wg,Wg in Z,Li do do for kV,xV in Z,Wg do if xV[1]==Si and xV[2]>=0 then local Hs=xV[0x2];if not t2[Hs]then t2[Hs]={Si[Hs]};end;do xV[1]=t2[Hs];end;xV[0X02]=1;end;end;end;end;end;end;end;until true;do return PS[fF[7]];end;end;end;end;end;else if not(PF<0X31)then if PF~=50 then PS[fF[0x7]]=PS[fF[0X6]][PS[fF[1]]];else local MW=fF[0X06];local ZW=PS[MW];for N3=MW+0X0001,fF[1]do do ZW=ZW..PS[N3];end;end;do(PS)[fF[7]]=ZW;end;end;else do PS[fF[0X0007]]=PS[fF[0X6]]>PS[fF[0X001]];end;end;end;end;end;end;end;end;elseif PF>=0X000054 then do if not(PF<0X005a)then if PF<0X005D then if PF<91 then if fF[1]==132 then Qb=Qb-0X1;(a5)[Qb]={[0X6]=(fF[0x6]-0xA5),[0X4]=0X0021,[0X00007]=(fF[7]-0XA5)};elseif fF[0X1]~=0xf6 then PS[fF[0X007]]=not PS[fF[6]];else Qb=Qb-1;a5[Qb]={[0X7]=(fF[0x0007]-87),[6]=(fF[0X6]-87),[4]=0X038};end;else if PF~=92 then local jY=fF[0x7];local ZY,oY,rY=PS[jY]();do if ZY then(PS)[jY+0X001]=oY;PS[jY+2]=rY;Qb=fF[0X00006];end;end;else PS[fF[7]]=kS[fF[2]];end;end;else if PF>=0X5f then if PF~=0X60 then do PS[fF[0x0007]]=PS[fF[0x6]]~=PS[fF[0x1]];end;else if PS[fF[0X6]]==fF[0X5]then Qb=fF[0X7];end;end;else if PF==94 then local uO=fF[6];PS[fF[0X007]]=PS[uO]..PS[uO+1];else repeat local jd,Ud=w5,(PS);do if not(#jd>0)then else local ml={};for Yr,tr in Z,jd do for pt,Vt in Z,tr do do if not(Vt[0x1]==Ud and Vt[2]>=0X00000)then else local CE=(Vt[2]);if not(not ml[CE])then else ml[CE]={Ud[CE]};end;do(Vt)[1]=ml[CE];end;do(Vt)[2]=0X1;end;end;end;end;end;end;end;until true;do return z(PS,fF[7],Sb);end;end;end;end;else do if not(PF<0X57)then do if not(PF<0X58)then if PF~=89 then local Pd=(fF[7]);local wd=PS[Pd];local pd,bd=PS[Pd+1],PS[Pd+2];(PS)[Pd]=v(function()for rV=wd,pd,bd do(p)(true,rV);end;end);do Qb=fF[6];end;else(PS)[fF[7]]=PS[fF[6]]+PS[fF[0X0001]];end;else PS[fF[0X0007]]=PS[fF[0X6]]>=PS[fF[0x01]];end;end;else do if PF<85 then local PK=fF[0x07];local GK=v(function(...)(p)();for yQ,kQ in...do p(true,yQ,kQ);end;end);GK(PS[PK],PS[PK+0X0001],PS[PK+0X0002]);Sb=PK;for x4 in Z,PS do if not(x4>Sb)then else(PS)[x4]=nil;end;end;PS[PK]=GK;Qb=fF[6];else if PF==0X00056 then local v0=(fF[0X07]);do Sb=v0+0X00001;end;do for Yi in Z,PS do if not(Yi>Sb)then else do(PS)[Yi]=nil;end;end;end;end;PS[v0](PS[v0+1]);Sb=v0-1;for f9 in Z,PS do if f9>Sb then(PS)[f9]=nil;end;end;else PS[fF[7]]=B(PS[fF[6]],PS[fF[0X001]]);end;end;end;end;end;end;end;else if PF<0X4E then if not(PF<0X00004b)then if not(PF>=76)then(PS)[fF[0X0007]]=b(PS[fF[6]],PS[fF[1]]);else if PF~=77 then do(Hb)[fF[0X006]]=PS[fF[7]];end;else PS[fF[0X7]]=PS[fF[6]][fF[0X0005]];end;end;else if not(PF>=0X000049)then local Vg=fF[0X007];local hg=v(function(...)p();for oo,no,ro,Qo,go,No,xo,yo,so,Bo in...do(p)(true,{oo,no,ro,Qo,go,No,xo,yo,so,Bo});end;end);(hg)(PS[Vg],PS[Vg+1],PS[Vg+0X2]);Sb=Vg;for U6 in Z,PS do if not(U6>Sb)then else PS[U6]=nil;end;end;do(PS)[Vg]=hg;end;Qb=fF[0X0006];else do if PF~=0X04a then PS[fF[0X7]]=Hb[fF[0X6]];else local cN,YN=fF[7],fF[6];if YN==0 then else Sb=cN+YN-0X0001;do for W8 in Z,PS do if not(W8>Sb)then else(PS)[W8]=nil;end;end;end;end;local uN,mN,lN=fF[0X1],nil,nil;if YN==1 then do mN,lN=Xb(PS[cN]());end;else mN,lN=Xb(PS[cN](z(PS,cN+1,Sb)));end;if uN==0X1 then Sb=cN-0X01;else if uN~=0 then mN=cN+uN-2;do Sb=mN+1;end;else do mN=mN+cN-1;end;Sb=mN;end;local Ee=0x0;do for hu=cN,mN do Ee=Ee+0X00001;PS[hu]=lN[Ee];end;end;end;for b5 in Z,PS do do if not(b5>Sb)then else do(PS)[b5]=nil;end;end;end;end;end;end;end;end;else if PF<81 then do if not(PF>=0X00004f)then if fF[0X1]==179 then Qb=Qb-1;a5[Qb]={[0X7]=(fF[7]-134),[0X6]=(fF[0X6]-0X86),[4]=83};else(PS)[fF[7]]=DS[i5+1];end;else if PF==80 then(PS)[fF[0x07]]=PS[fF[0X6]]+fF[5];else repeat local ch,gh=w5,(PS);do if not(#ch>0)then else local KP={};for m0,j0 in Z,ch do for yK,YK in Z,j0 do if YK[0X01]==gh and YK[0x2]>=0x0000 then local ag=YK[2];do if not KP[ag]then(KP)[ag]={gh[ag]};end;end;YK[1]=KP[ag];(YK)[2]=1;end;end;end;end;end;until true;local qt=fF[0X07];return z(PS,qt,qt+fF[6]-0x002);end;end;end;else if PF<82 then local r_=(PS[fF[6]]);PS[fF[0x7]]=r_..r_;else if PF~=0x53 then repeat local RV,ZV=w5,PS;if not(#RV>0)then else local KV=({});for H4,T4 in Z,RV do for vB,HB in Z,T4 do if not(HB[1]==ZV and HB[2]>=0X000)then else local NG=(HB[0X2]);do if not(not KV[NG])then else KV[NG]={ZV[NG]};end;end;(HB)[1]=KV[NG];do(HB)[0x2]=0X1;end;end;end;end;end;until true;do return PS[fF[0x7]]();end;else if fF[1]==0x29 then Qb=Qb-1;do(a5)[Qb]={[7]=(fF[0X7]-0X80),[6]=(fF[0X06]-128),[4]=0X35};end;else do PS[fF[0X00007]]=#PS[fF[0X0006]];end;end;end;end;end;end;end;else do if not(PF>=24)then do if not(PF<12)then if not(PF>=18)then if PF>=15 then if not(PF<16)then do if PF~=0X000011 then do(PS)[fF[0X7]]=PS[fF[6]]==PS[fF[1]];end;else repeat local tp,Ap=w5,(PS);do if not(#tp>0X00000)then else local He=({});for s6,q6 in Z,tp do for Xt,ut in Z,q6 do if ut[0x1]==Ap and ut[0x2]>=0 then local og=(ut[0X2]);do if not He[og]then do(He)[og]={Ap[og]};end;end;end;ut[0X001]=He[og];ut[0x002]=1;end;end;end;end;end;until true;return;end;end;else(PS)[fF[0X7]]=PS[fF[6]]^PS[fF[1]];end;else do if not(PF>=13)then do(PS)[fF[0x7]]=PS[fF[0X00006]]*PS[fF[1]];end;else if PF~=0xE then local uL=fF[7];for um in Z,PS do if um>Sb then do PS[um]=nil;end;end;end;PS[uL](z(PS,uL+0X1,Sb));Sb=uL-0x1;for vq in Z,PS do if not(vq>Sb)then else PS[vq]=nil;end;end;else if PS[fF[6]]<=PS[fF[1]]then do Qb=fF[7];end;end;end;end;end;end;else if not(PF<21)then if not(PF<22)then if PF~=0X00017 then local On=(fF[7]);local yn=fF[0x6];Sb=On+yn-1;for ES in Z,PS do do if not(ES>Sb)then else(PS)[ES]=nil;end;end;end;repeat local Ro,zo=w5,(PS);do if#Ro>0 then local Pe={};for wM,CM in Z,Ro do for wD,vD in Z,CM do do if not(vD[0X1]==zo and vD[2]>=0)then else local mv=vD[0X2];if not Pe[mv]then(Pe)[mv]={zo[mv]};end;vD[0X00001]=Pe[mv];do vD[2]=1;end;end;end;end;end;end;end;until true;return PS[On](z(PS,On+0X1,Sb));else Sb=fF[0X007];for vc in Z,PS do if vc>Sb then PS[vc]=nil;end;end;(PS)[Sb]=PS[Sb]();for hF in Z,PS do if hF>Sb then do(PS)[hF]=nil;end;end;end;end;else if not(not(PS[fF[0x6]]<=fF[5]))then else Qb=fF[7];end;end;else if PF>=19 then if PF==20 then do PS[fF[0X7]][PS[fF[0X06]]]=PS[fF[1]];end;else if PS[fF[6]]~=fF[5]then do Qb=fF[0X7];end;end;end;else(PS)[fF[7]]=fF[2];end;end;end;else if not(PF<0X6)then do if PF>=0X9 then if PF<0x0a then do Sb=fF[7];end;for FS in Z,PS do do if FS>Sb then PS[FS]=nil;end;end;end;(PS[Sb])();Sb=Sb-1;for DU in Z,PS do do if not(DU>Sb)then else(PS)[DU]=nil;end;end;end;else if PF==11 then if not(PS[fF[0x6]]<PS[fF[0x1]])then else Qb=fF[7];end;else(PS)[fF[0X00007]]=fF[2];end;end;else if not(PF<7)then if PF~=8 then if not(fF[0x2]<PS[fF[0x1]])then do Qb=fF[7];end;end;else do if PS[fF[0X7]]then Qb=fF[6];end;end;end;else local He,te=fF[0x0007],PS[fF[6]];do PS[He+0X1]=te;end;PS[He]=te[fF[5]];end;end;end;else if PF<0X3 then if PF<1 then PS[fF[0X7]]=false;else if PF~=0X0002 then local sq=fF[0X007];local bq=(v(function(...)(p)();for Uh in...do p(true,Uh);end;end));(bq)(PS[sq],PS[sq+1],PS[sq+2]);Sb=sq;for dl in Z,PS do if dl>Sb then(PS)[dl]=nil;end;end;PS[sq]=bq;Qb=fF[6];else local bD=(fF[0x7]);local YD,VD=PS[bD]();if YD then for ad=1,fF[0x1]do PS[bD+ad]=VD[ad];end;Qb=fF[0X6];end;end;end;else if PF<0X00004 then if not(not(PS[fF[0X6]]<PS[fF[0X1]]))then else Qb=fF[0X7];end;else if PF~=5 then PS[fF[0X7]]=nil;else local lu=(fF[7]);local ku=rS-i5;if ku<0X0 then ku=-1;end;for PH=lu,lu+ku do(PS)[PH]=DS[i5+(PH-lu)+0X1];end;Sb=lu+ku;for io in Z,PS do if io>Sb then PS[io]=nil;end;end;end;end;end;end;end;end;else if not(PF<36)then if PF<42 then if not(PF<39)then if not(PF<40)then do if PF==0X029 then local rV=(fF[7]);Sb=rV+fF[0X06]-0X1;do for fO in Z,PS do if fO>Sb then PS[fO]=nil;end;end;end;PS[rV]=PS[rV](z(PS,rV+0X1,Sb));do Sb=rV;end;for xt in Z,PS do do if not(xt>Sb)then else(PS)[xt]=nil;end;end;end;else local re=(PS[fF[0X6]]/PS[fF[1]]);do PS[fF[7]]=re-re%1;end;end;end;else if PS[fF[0x6]]~=PS[fF[1]]then else Qb=fF[0X7];end;end;else if not(PF<0X00025)then if PF==0X26 then PS[fF[0X07]]=PS[fF[6]]%PS[fF[0X1]];else local Ut=N5[fF[0X6]];do(PS)[fF[0X7]]=Ut[0X0001][Ut[2]];end;end;else do(kS)[fF[2]]=PS[fF[7]];end;end;end;else do if PF<45 then do if PF<43 then local Ep=fF[0X7];Sb=Ep+0X002;do for Ri in Z,PS do if Ri>Sb then(PS)[Ri]=nil;end;end;end;PS[Ep](PS[Ep+1],PS[Ep+0X02]);Sb=Ep-0X1;for VP in Z,PS do if not(VP>Sb)then else(PS)[VP]=nil;end;end;else if PF~=0X2c then Qb=fF[0X6];else do PS[fF[7]][fF[2]]=fF[0x00005];end;end;end;end;else do if PF>=0x2E then if PF~=0X2F then do if fF[0X1]~=129 then local Ir=(fF[7]);do for T9=Ir,Ir+(fF[6]-1)do PS[T9]=DS[i5+(T9-Ir)+0X0001];end;end;else do Qb=Qb-0X1;end;a5[Qb]={[0X4]=0X00053,[0x06]=(fF[0X006]-0x0004A),[7]=(fF[7]-0X0004A)};end;end;else PS[fF[7]]=PS[fF[6]]~=fF[0x5];end;else do PS[fF[0X0007]]=PS[fF[6]]%fF[5];end;end;end;end;end;end;else do if not(PF>=30)then if not(PF>=0X1B)then if not(PF>=25)then(PS)[fF[0X7]]=PS[fF[6]]<=PS[fF[0x1]];elseif PF~=26 then local Na=(fF[0X7]);Sb=Na+fF[6]-1;for IY in Z,PS do do if IY>Sb then do PS[IY]=nil;end;end;end;end;PS[Na](z(PS,Na+0X00001,Sb));Sb=Na-0x01;for io in Z,PS do if not(io>Sb)then else(PS)[io]=nil;end;end;else do(PS[fF[7]])[fF[0X02]]=PS[fF[1]];end;end;else do if PF<0X00001c then local ZO=N5[fF[6]];(ZO[1])[ZO[0X00002]]=PS[fF[0X7]];else if PF==29 then do if not(PS[fF[0X6]]<=PS[fF[1]])then Qb=fF[0X7];end;end;else PS[fF[0X7]]=PS[fF[0X006]]/PS[fF[0X01]];end;end;end;end;else if not(PF>=33)then if PF<31 then repeat local hH,kH=w5,PS;if#hH>0 then local Mv={};do for Z2,x2 in Z,hH do for sD,ID in Z,x2 do if not(ID[0X1]==kH and ID[2]>=0)then else local jJ=ID[0X2];if not Mv[jJ]then Mv[jJ]={kH[jJ]};end;ID[0X1]=Mv[jJ];ID[0X0002]=1;end;end;end;end;end;until true;local Oj=fF[0X7];return PS[Oj](z(PS,Oj+0X01,Sb));else if PF~=0X00020 then for zF=fF[7],fF[0x06]do(PS)[zF]=nil;end;else(PS)[fF[7]]={z({},0X0001,fF[6])};end;end;elseif PF<34 then do PS[fF[7]]=PS[fF[0X6]];end;else if PF==0X023 then local uN=fF[7];local kN,nN=PS[uN]();if kN then Qb=fF[6];PS[uN+0X3]=nN;end;else local Om=fF[0X007];local sm,nm=PS[Om]();do if sm then PS[Om+1]=nm;Qb=fF[0X0006];end;end;end;end;end;end;end;end;end;end;end;end;if not(J)then else J(Q5,v5);end;return Q5;end;hb=5;end;end;end;end;until hb==5;hb=0X1;local ib,Mb=nil,(nil);repeat if not(hb<=0)then if hb~=1 then do(Hb)[0X0004]=jb;end;break;else function ib()local gr=(1);local br,Cr,Ir,Sr=nil,nil,nil,(nil);do repeat if not(gr<=0X00001)then if not(gr<=0x002)then if gr~=3 then br={nil,{},nb,nb,nil,{},nil,{},nb};do gr=0X0;end;else Sr={};gr=0X5;end;else do Ir=br[2];end;gr=3;end;elseif gr==0 then do Cr={};end;gr=0X2;else do gr=4;end;end;until gr==5;end;gr=0;local Lr,Wr=nil,nil;while gr<=2 do if not(gr<=0)then if gr~=1 then for AS=0x0,Lr-Yb do do Ir[AS]=ib();end;end;gr=1;else Wr=t()-0X0Df29;do gr=0X3;end;end;else Lr=t()-0X66d8;gr=0X2;end;end;local Tr=(1);local kr=(x());local Er=x()~=0X0;for qR=0X1,Wr do local pR=x();local bR=(nil);for X0=0,0X0002 do if X0<=0 then do bR=nil;end;else do if X0~=1 then if pR==0x26 then bR=y()+t();elseif pR==107 then bR=false;else if pR==48 then bR=L();elseif pR==0X03c then do bR=Ub;end;elseif pR==126 then do bR=t();end;elseif pR==0X1d then bR=g(Wb(kr),x());elseif pR==49 then bR=g(Wb(kr),y()+t());elseif pR==152 then bR=g(Wb(kr),t());else if pR==0Xd5 then do bR=g(Wb(kr),0x02);end;else if pR==0xCE then bR=y();end;end;end;end;else do Sr[qR-1]=Tr;end;end;end;end;end;local yR={bR,{}};Cr[Tr]=yR;Tr=Tr+1;if Er then jb[fb]=yR;do fb=fb+1;end;end;end;br[0X0000c]=t();gr=1;while gr<=1 do if gr==0 then br[10]=x();gr=0X0002;else br[19]=x();gr=0;end;end;local Qr=(br[8]);gr=0X0002;local Ur,xr,Vr=nil,nil,nil;while 0.3978322041697001 do if not(gr<=0x00005)then if not(gr<=8)then if gr<=10 then if gr~=0x0009 then br[0X0005]=s(Vr,0x00001,1)~=0;gr=0X7;else(br)[7]=h();gr=0x8;end;else do if gr~=0Xb then do for cX=0X01,Ur do(Qr)[cX]={[2]=x(),[ob]=S(),[0X3]=x(),[6]=S(),[1]=S(),[0X4]=h(),[5]=x()};end;end;gr=11;else br[ub]=h();gr=1;end;end;end;else if gr<=0X0006 then(br)[0X1]=xr;gr=4;else do if gr~=0X00007 then br[3]=h();gr=0x6;else br[4]=s(Vr,0x00002,0x01)~=0X0;gr=9;end;end;end;end;else do if not(gr<=0X2)then if not(gr<=0X3)then if gr~=4 then Vr=x();gr=0xA;else for x1=1,h()do xr[x1]={x(),h()};end;do gr=3;end;end;else return br;end;else do if gr<=0X0 then for OE=1,Ur do local bE=nil;local qE=0x00;repeat do if qE==0X00 then do bE=br[8][OE];end;qE=1;else for T1,Y1 in ipairs(E)do local y1=nil;local c1=(U[Y1]);local B1=(1);do repeat if B1==0 then do if y1==0X6 then local lr,ar=nil,nil;for C2=0X0,0x1 do if C2==0X0000 then lr=Sr[bE[Y1]];else ar=Cr[lr];end;end;do if not(ar)then else(bE)[c1]=ar[Yb];local j1=(ar[2]);do(j1)[#j1+0X0001]={bE,c1};end;end;end;else if y1==13 then bE[Y1]=OE+bE[Y1]+1;end;end;end;B1=0X2;else y1=bE[c1];do B1=0X0;end;end;until B1==2;end;end;do qE=0X2;end;end;end;until qE>=0X2;end;gr=5;else if gr~=1 then Ur=t()-0X000160EE;gr=0X000c;else xr={};gr=0;end;end;end;end;end;end;end;end;hb=0;end;else Mb=ib();hb=2;end;until(false);hb=1;repeat if hb==0 then do return gb(Mb,nb,Y)(...);end;else jb=nil;hb=0X0000;end;until(false);end)(1,0X9,coroutine,tonumber,nil,true,coroutine.yield,0XE,table.unpack,5,rawget,setfenv,0X010,string.sub,11,0x00000,string.byte,string,6,'..','b\097nd',20,table.insert,getfenv,0x20,select,setmetatable,"l\115h\105\102t",0X48,3,type,4,0XF,"\098\111r",7997,8,0x00010000,0X7,0X00A,...);
